import numpy as np
from sklearn import  datasets
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
cmap = ListedColormap(['#FF0000','#00FF00','#0000FF']) # HEX dla odpowiednio czerwony, zielony, niebieski kolor

iris = datasets.load_iris()
X, y = iris.data , iris.target # X zmienne objaśniające, y zmienna objaśniana 0,1,2

X_train, X_test, y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=1234)

#print(X_train.shape) # trenujemy na 120 wierszy, 4 kolumny
#print(X_train[0])

#print(y_train.shape) # wektor tylko jeden wiersz z rodzajami irysow
#print(y_train)

#plt.figure()
#plt.scatter(X[:,0],X[:,1], c=y, cmap=cmap,edgecolors='k',s=20)
#plt.show()

def accuracy(y_true, y_pred):
    accuracy = np.sum(y_true == y_pred) / len(y_true)
    return accuracy

from knn import  KNN
k = 3
clf = KNN(k=k)
clf.fit(X_train, y_train)
predictions = clf.predict(X_test)
print("KNN classification accuracy", accuracy(y_test, predictions))

error = np.dstack((y_test, predictions, [y_test-predictions]) )
print(error) 
